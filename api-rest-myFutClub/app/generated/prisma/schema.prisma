// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../app/generated/prisma"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELS
model User {
  // Fields
  id_user       Int      @id @default(autoincrement())
  team          Int? // Only for players
  role          Role
  name          String   @db.VarChar(20)
  surname       String   @db.VarChar(40)
  email         String   @unique @db.VarChar(50)
  password      String   @db.VarChar(200)
  date          DateTime
  country       String   @db.VarChar(20)
  profile_image String?  @default("default.png") @db.VarChar(200)

  // Relation fields
  playerToTeam Team?        @relation("PlayerToTeam", fields: [team], references: [id_team])
  attendances  Attendance[]
  teams        Team[]       @relation("TeamToCoach")

  @@map("users")
}

model Club {
  // Fields
  id_club     Int    @id @default(autoincrement())
  name        String @db.VarChar(30)
  city        String @db.VarChar(20)
  country     String @db.VarChar(20)
  club_shield String @default("default-shield.png") @db.VarChar(200)

  // Relation fields
  teams Team[]

  @@map("clubs")
}

model Team {
  // Fields
  id_team  Int @id @default(autoincrement())
  coach    Int // Only for coaches
  club     Int
  division Int

  // Relation fields
  teamToCoach    User     @relation("TeamToCoach", fields: [coach], references: [id_user])
  teamToClub     Club     @relation(fields: [club], references: [id_club])
  users          User[]   @relation("PlayerToTeam")
  teamToDivision Division @relation(fields: [division], references: [id_division])

  @@map("teams")
}

model Division {
  // Fields
  id_division Int       @id @default(autoincrement())
  age_group   Age_group
  group       String    @db.VarChar(1)

  // Relation fields
  teams Team[]

  @@map("divisions")
}

model Attendance {
  // Fields
  id_attendance Int      @id @default(autoincrement())
  player        Int
  date          DateTime
  assisted      Boolean

  // Relation fields
  attendanceToPlayer User @relation(fields: [player], references: [id_user])

  @@map("attendances")
}

model Log {
  // Fields
  id_log  Int      @id @default(autoincrement())
  message String   @db.VarChar(200)
  date    DateTime

  @@map("logs")
}

enum Role {
  ADMIN
  COACH
  PLAYER
}

enum Age_group {
  BENJAMIN
  ALEVIN
  CADETE
  JUVENIL
  SENIOR
}
